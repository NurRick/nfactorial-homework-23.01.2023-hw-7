// TASK-1: Задержка на промисах

function delay(ms) {
    return new Promise (resolve => setTimeout(resolve, ms));
  }
  
  delay(3000).then(() => alert('выполнилось через 3 секунды'));

// TASK-2: Можно ли "перевыполнить" промис?
// Код ниже выведет 1. Исполнитель должен вызвать что-то одно: resolve или reject. 
// Состояние промиса может быть изменено только один раз.
// Все последующие вызовы resolve и reject будут проигнорированы.

let promise = new Promise(function(resolve, reject) {
    resolve(1);
  
    setTimeout(() => resolve(2), 1000);
  });
  
  promise.then(alert);

//   Промисы: сравните then и catch
// Являются ли фрагменты кода ниже эквивалентными?
// Другими словами, ведут ли они себя одинаково во всех обстоятельствах,
// для всех переданных им обработчиков?
promise.then(f1).catch(f2);
promise.then(f1, f2);

// Нет они не эквивалентны. В первом варианте then передает свое содержимое в cath и cath обрабатывает ошибку
// а во втором варианте ошибка не обрабатывается